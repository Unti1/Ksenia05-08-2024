'''### Уровень: Базовый

1. **Функции**: Напиши простую функцию, которая принимает два аргумента (имена) и выводит сообщение приветствия для каждого из них.

2. **Функции с неограниченным количеством аргументов**: Напиши функцию, которая принимает неограниченное количество аргументов и выводит сумму всех переданных чисел.

3. **Условные конструкции (if-elif-else)**: Напиши программу, которая проверяет введённый возраст и выводит "Ребёнок", "Подросток" или "Взрослый", в зависимости от диапазона возраста.

4. **Циклы (for)**: Используя цикл `for`, выведи на экран все чётные числа от 1 до 20.

5. **Циклы (while)**: Напиши программу, которая с помощью цикла `while` выводит числа от 10 до 1 (обратный отсчёт).

---

### Уровень: Средний

6. **Функции и возвращаемое значение**: Создай функцию, которая принимает список чисел и возвращает новый список, содержащий только чётные числа.

7. **Функции с аргументами по умолчанию**: Напиши функцию, которая принимает два аргумента: имя и возраст, и выводит сообщение "Имя - Возраст". Если возраст не передан, то по умолчанию он равен 30.

8. **Условные конструкции с логическими операторами**: Напиши программу, которая принимает три числа и выводит наибольшее из них, используя условные операторы `if`, `elif`, `else`.

9. **Циклы с вложенными условиями**: Создай цикл `for`, который проходит по списку чисел, и для каждого числа выводит, является ли оно чётным или нечётным.

10. **Цикл с пользовательским вводом (while)**: Напиши программу, которая запрашивает у пользователя числа и выводит их сумму. Программа должна завершиться, когда пользователь введёт слово "стоп".

---

### Уровень: Сложный

11. **Рекурсивные функции**: Напиши рекурсивную функцию для вычисления факториала числа.

12. **Функции с неограниченным количеством позиционных и именованных аргументов**: Напиши функцию, которая принимает неограниченное количество именованных и позиционных аргументов и выводит их в виде: "Аргументы: {позиционные}, Именованные аргументы: {именованные}".

13. **Условные конструкции с вложенными циклами**: Создай программу, которая для каждого числа от 1 до 50 проверяет, является ли оно одновременно кратным 3 и 5 (используя вложенные `if-else` и цикл).

14. **Циклы и обработка ошибок**: Напиши программу, которая находит все простые числа в диапазоне от 1 до 100 с помощью цикла `for`, используя условие для проверки простоты числа.

15. **Циклы и работа с коллекциями**: Напиши программу, которая принимает список строк и выводит только уникальные строки, игнорируя дубликаты.'''


'''1. **Функции**: Напиши простую функцию, которая принимает два аргумента (имена) и выводит сообщение приветствия для каждого из них.'''

def imena(x,k: str):
    return (F"Привет,{x},{k}")

print('1:', imena('Anna','Elena'))  

'''**Функции с неограниченным количеством аргументов**: Напиши функцию, которая принимает неограниченное количество аргументов и выводит сумму всех переданных чисел.'''

def sum_1(*args:int):
    return sum(args)

print('2:',sum_1(1,2,4))

'''**Условные конструкции (if-elif-else)**: Напиши программу, которая проверяет введённый возраст и выводит "Ребёнок", "Подросток" или "Взрослый", в зависимости от диапазона возраста.'''

def vozrast(x:int):
    if x < 12:
        return ('Ребенок')
    elif x>12 and x<18:
        return('Подросток')
    else:
        return ('Взрослый')

print('3:', vozrast(3))   


'''**Циклы (for)**: Используя цикл `for`, выведи на экран все чётные числа от 1 до 20.'''

for x in range(1,21):
    if x %2 ==0:
        print(x,'Четное')

'''Напиши программу, которая с помощью цикла `while` выводит числа от 10 до 1 (обратный отсчёт).'''      

x = 0
x 
while x<11:
    print(x)
    x+=1

'''**Функции и возвращаемое значение**: Создай функцию, которая принимает список чисел и возвращает новый список, содержащий только чётные числа.'''

def list2(l: list):
    h =[]
    for x in l:
        if x %2 ==0:
           h.append(x) 
    return h

print('6:',list2([2,3,4]))

'''**Функции с аргументами по умолчанию**: Напиши функцию, которая принимает два аргумента: имя и возраст, и выводит сообщение "Имя - Возраст". Если возраст не передан, то по умолчанию он равен 30.'''

def func1(x,k=30):
    return f"{x}-{k}"

print('7:',func1('Anna'))

''' **Условные конструкции с логическими операторами**: Напиши программу, которая принимает три числа и выводит наибольшее из них, используя условные операторы `if`, `elif`, `else`.'''

def func2(x,k,l:int):
    if x>k and x>l:
        return (f"{X}- max")
    elif k>x and k>l:  
        return (f"{k}- max")
    else:
        return (f"{l}- max")  
    
print('8:', func2(11,22,33))    

''' **Циклы с вложенными условиями**: Создай цикл `for`, который проходит по списку чисел, и для каждого числа выводит, является ли оно чётным или нечётным.'''

x = [11,22,33,66,77,88]
for i in x:
    if i %2==0:
        print(i,'- четное')
    else:
        print(i,'-нечеиное ')   

'''**Цикл с пользовательским вводом (while)**: Напиши программу, которая запрашивает у пользователя числа и выводит их сумму. Программа должна завершиться, когда пользователь введёт слово "стоп".'''    

'''x = (int(input()))
while x == 'стоп':
    break
    x+=1'''
    
''' **Функции с неограниченным количеством позиционных и именованных аргументов**: Напиши функцию, которая принимает неограниченное количество именованных и позиционных аргументов и выводит их в виде: "Аргументы: {позиционные}, Именованные аргументы: {именованные}".'''


def imen(*args,**kwargs):
    return f"Аргументы: {args}, Именованные аргументы: {kwargs}"

print('12:',imen(2,hh=3))

'''**Условные конструкции с вложенными циклами**: Создай программу, которая для каждого числа от 1 до 50 проверяет, является ли оно одновременно кратным 3 и 5 (используя вложенные `if-else` и цикл).'''   

x = range(1,51)
for i in x:
    if i %5==0 and i%3==0:
        print(i)

''' **Циклы и обработка ошибок**: Напиши программу, которая находит все простые числа в диапазоне от 1 до 100 с помощью цикла `for`, используя условие для проверки простоты числа.
'''

'''for i in range(0,101):
    if i%1==0 and i%i==0:
        print(i)'''

''' **Циклы и работа с коллекциями**: Напиши программу, которая принимает список строк и выводит только уникальные строки, игнорируя дубликаты.'''

x = input()
x = x.split()